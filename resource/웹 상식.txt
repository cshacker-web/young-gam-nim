<react native>
RN은 React 기반위에서 js로 네이티브 모바일 앱을 만드는 프레임웍크. react의 핵심개념인 virtual dom의 효율적인 diff algorithm으로 변경이 발생한 node를 찾고 그 node에 해당하는 dom을 브라우저에서 렌더링 하던것을, native view에서 렌더링하도록 대상을 변경한 것
=> 이는 react가 트리의 변경된 부분을 처리하는 reconciler와 화면을 렌더링하는 renderer가 분리된 아키텍처를 가지고 있기 때문에 쉽게 전환이 가능함


(구조)
환면의 UI와 touch interaction을 처리하는 main thread와 js된 비즈니스 로직을 실행하는 javascript thread가 가장 핵심적인 부분
javascript thread는 webkit 기반의 js core engine을 사용하는데, ios는 os 내장된 라이브러리를 사용하고, android는 라이브러리를 포함시켜 앱과 함께 빌드된다

각 스레드는 독립적으로 실행되고, 직접적인 통신은 할 수 없다. but 가운데의 'bridge' 라는 중요한 개념을 통해서만 통신하도록 설계되었는데 확장성과 thread간의 간섭으로 인한 앱의 반응성 저하를 방지하기 위함.
그밖에 레이아웃의 크기와 위치를 계산하는 shadow thread가 있고, native modules들이 사용하는 thread가 있다.

(thread간 통신에 핵심이 되는 bridge의 특징)
1.Asynchronous

https://tv.naver.com/v/4578325
https://evanjin.dev/development/react-native-%EC%B0%B8%EA%B3%A0%EC%82%AC%ED%95%AD%EB%93%A4/




<함수형 프로그래밍(Function Programming)>
* 		함수형 프로그래밍에 대해 설명해달라
 함수형 프로그래밍은 순수함수와 보조 함수의 조합을 통해 로직내에 존재하는 조건문과 반복문을 제거하여 복잡성을 해결하고 변수의 사용을 억제하여 상태 변경을 피하려는 프로그래밍 패러다임이다.
* 		함수형 프로그래밍에 개념에서 순수함수란 무엇인가
순수함수는 같은 입력이 주어지면, 같은 출력을 반환해야하고, side effect(부작용) 이 없어야한다.
결국, 함수형 프로그래밍은 순수함수를 통해 sideeffect를 최대한 억제하여 오류를 피하고 프로그램의 안정성을 높이려는 노력의 한 방법
* 		OOP와 함수형 프로그래밍의 가장 큰 차이점은 무엇인가
객체지향은 객체 안에 상태를 저장하고, 이 상태를 이용해서 메소드를 추가하고 상태변화를 설정하고 조정하기위해 다양한 기능을 사용한다. 이에 반해 함수형 프로그래밍은 상태를 제어하는것보다 상태를 저장하지 않고 없애는데 주력한다. 
예를들면, 객체 지향은 상태를 저장하는 필드와 그 필드들을 이용해 기능을 제공하는 메소드를 만들고 클래스를 만듭니다. 반면 함수형은 몇몇 자료구조(list, map, set) 등을 이용해 최적화된 동작을 만들어낸다



<면접문제>
https://sunnykim91.tistory.com/m/121